STRINGS(1)                   GNU Development Tools                  STRINGS(1)



NNAAMMEE
       strings - print the sequences of printable characters in files

SSYYNNOOPPSSIISS
       strings [--aaffoovvVV] [--_m_i_n_-_l_e_n]
               [--nn _m_i_n_-_l_e_n] [----bbyytteess==_m_i_n_-_l_e_n]
               [--tt _r_a_d_i_x] [----rraaddiixx==_r_a_d_i_x]
               [--ee _e_n_c_o_d_i_n_g] [----eennccooddiinngg==_e_n_c_o_d_i_n_g]
               [--] [----aallll] [----pprriinntt--ffiillee--nnaammee]
               [--TT _b_f_d_n_a_m_e] [----ttaarrggeett==_b_f_d_n_a_m_e]
               [--ww] [----iinncclluuddee--aallll--wwhhiitteessppaaccee]
               [--ss] [----oouuttppuutt--sseeppaarraattoorr_s_e_p___s_t_r_i_n_g]
               [----hheellpp] [----vveerrssiioonn] _f_i_l_e...

DDEESSCCRRIIPPTTIIOONN
       For each _f_i_l_e given, GNU ssttrriinnggss prints the printable character
       sequences that are at least 4 characters long (or the number given with
       the options below) and are followed by an unprintable character.

       Depending upon how the strings program was configured it will default
       to either displaying all the printable sequences that it can find in
       each file, or only those sequences that are in loadable, initialized
       data sections.  If the file type is unrecognizable, or if strings is
       reading from stdin then it will always display all of the printable
       sequences that it can find.

       For backwards compatibility any file that occurs after a command-line
       option of just -- will also be scanned in full, regardless of the
       presence of any --dd option.

       ssttrriinnggss is mainly useful for determining the contents of non-text
       files.

OOPPTTIIOONNSS
       --aa
       ----aallll
       --   Scan the whole file, regardless of what sections it contains or
           whether those sections are loaded or initialized.  Normally this is
           the default behaviour, but strings can be configured so that the --dd
           is the default instead.

           The -- option is position dependent and forces strings to perform
           full scans of any file that is mentioned after the -- on the command
           line, even if the --dd option has been specified.

       --dd
       ----ddaattaa
           Only print strings from initialized, loaded data sections in the
           file.  This may reduce the amount of garbage in the output, but it
           also exposes the strings program to any security flaws that may be
           present in the BFD library used to scan and load sections.  Strings
           can be configured so that this option is the default behaviour.  In
           such cases the --aa option can be used to avoid using the BFD library
           and instead just print all of the strings found in the file.

       --ff
       ----pprriinntt--ffiillee--nnaammee
           Print the name of the file before each string.

       ----hheellpp
           Print a summary of the program usage on the standard output and
           exit.

       --_m_i_n_-_l_e_n
       --nn _m_i_n_-_l_e_n
       ----bbyytteess==_m_i_n_-_l_e_n
           Print sequences of characters that are at least _m_i_n_-_l_e_n characters
           long, instead of the default 4.

       --oo  Like --tt oo.  Some other versions of ssttrriinnggss have --oo act like --tt dd
           instead.  Since we can not be compatible with both ways, we simply
           chose one.

       --tt _r_a_d_i_x
       ----rraaddiixx==_r_a_d_i_x
           Print the offset within the file before each string.  The single
           character argument specifies the radix of the offset---oo for octal,
           xx for hexadecimal, or dd for decimal.

       --ee _e_n_c_o_d_i_n_g
       ----eennccooddiinngg==_e_n_c_o_d_i_n_g
           Select the character encoding of the strings that are to be found.
           Possible values for _e_n_c_o_d_i_n_g are: ss = single-7-bit-byte characters
           (ASCII, ISO 8859, etc., default), SS = single-8-bit-byte characters,
           bb = 16-bit bigendian, ll = 16-bit littleendian, BB = 32-bit
           bigendian, LL = 32-bit littleendian.  Useful for finding wide
           character strings. (ll and bb apply to, for example, Unicode
           UTF-16/UCS-2 encodings).

       --TT _b_f_d_n_a_m_e
       ----ttaarrggeett==_b_f_d_n_a_m_e
           Specify an object code format other than your system's default
           format.

       --vv
       --VV
       ----vveerrssiioonn
           Print the program version number on the standard output and exit.

       --ww
       ----iinncclluuddee--aallll--wwhhiitteessppaaccee
           By default tab and space characters are included in the strings
           that are displayed, but other whitespace characters, such a
           newlines and carriage returns, are not.  The --ww option changes this
           so that all whitespace characters are considered to be part of a
           string.

       --ss
       ----oouuttppuutt--sseeppaarraattoorr
           By default, output strings are delimited by a new-line. This option
           allows you to supply any string to be used as the output record
           separator.  Useful with --include-all-whitespace where strings may
           contain new-lines internally.

       @@_f_i_l_e
           Read command-line options from _f_i_l_e.  The options read are inserted
           in place of the original @_f_i_l_e option.  If _f_i_l_e does not exist, or
           cannot be read, then the option will be treated literally, and not
           removed.

           Options in _f_i_l_e are separated by whitespace.  A whitespace
           character may be included in an option by surrounding the entire
           option in either single or double quotes.  Any character (including
           a backslash) may be included by prefixing the character to be
           included with a backslash.  The _f_i_l_e may itself contain additional
           @_f_i_l_e options; any such options will be processed recursively.

SSEEEE AALLSSOO
       aarr(1), nnmm(1), oobbjjdduummpp(1), rraannlliibb(1), rreeaaddeellff(1) and the Info entries
       for _b_i_n_u_t_i_l_s.

CCOOPPYYRRIIGGHHTT
       Copyright (c) 1991-2020 Free Software Foundation, Inc.

       Permission is granted to copy, distribute and/or modify this document
       under the terms of the GNU Free Documentation License, Version 1.3 or
       any later version published by the Free Software Foundation; with no
       Invariant Sections, with no Front-Cover Texts, and with no Back-Cover
       Texts.  A copy of the license is included in the section entitled "GNU
       Free Documentation License".



binutils-2.35.1                   2020-09-19                        STRINGS(1)
