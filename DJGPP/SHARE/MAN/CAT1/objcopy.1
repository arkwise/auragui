OBJCOPY(1)                   GNU Development Tools                  OBJCOPY(1)



NNAAMMEE
       objcopy - copy and translate object files

SSYYNNOOPPSSIISS
       objcopy [--FF _b_f_d_n_a_m_e|----ttaarrggeett==_b_f_d_n_a_m_e]
               [--II _b_f_d_n_a_m_e|----iinnppuutt--ttaarrggeett==_b_f_d_n_a_m_e]
               [--OO _b_f_d_n_a_m_e|----oouuttppuutt--ttaarrggeett==_b_f_d_n_a_m_e]
               [--BB _b_f_d_a_r_c_h|----bbiinnaarryy--aarrcchhiitteeccttuurree==_b_f_d_a_r_c_h]
               [--SS|----ssttrriipp--aallll]
               [--gg|----ssttrriipp--ddeebbuugg]
               [----ssttrriipp--uunnnneeeeddeedd]
               [--KK _s_y_m_b_o_l_n_a_m_e|----kkeeeepp--ssyymmbbooll==_s_y_m_b_o_l_n_a_m_e]
               [--NN _s_y_m_b_o_l_n_a_m_e|----ssttrriipp--ssyymmbbooll==_s_y_m_b_o_l_n_a_m_e]
               [----ssttrriipp--uunnnneeeeddeedd--ssyymmbbooll==_s_y_m_b_o_l_n_a_m_e]
               [--GG _s_y_m_b_o_l_n_a_m_e|----kkeeeepp--gglloobbaall--ssyymmbbooll==_s_y_m_b_o_l_n_a_m_e]
               [----llooccaalliizzee--hhiiddddeenn]
               [--LL _s_y_m_b_o_l_n_a_m_e|----llooccaalliizzee--ssyymmbbooll==_s_y_m_b_o_l_n_a_m_e]
               [----gglloobbaalliizzee--ssyymmbbooll==_s_y_m_b_o_l_n_a_m_e]
               [----gglloobbaalliizzee--ssyymmbboollss==_f_i_l_e_n_a_m_e]
               [--WW _s_y_m_b_o_l_n_a_m_e|----wweeaakkeenn--ssyymmbbooll==_s_y_m_b_o_l_n_a_m_e]
               [--ww|----wwiillddccaarrdd]
               [--xx|----ddiissccaarrdd--aallll]
               [--XX|----ddiissccaarrdd--llooccaallss]
               [--bb _b_y_t_e|----bbyyttee==_b_y_t_e]
               [--ii [_b_r_e_a_d_t_h]|----iinntteerrlleeaavvee[=_b_r_e_a_d_t_h]]
               [----iinntteerrlleeaavvee--wwiiddtthh==_w_i_d_t_h]
               [--jj _s_e_c_t_i_o_n_p_a_t_t_e_r_n|----oonnllyy--sseeccttiioonn==_s_e_c_t_i_o_n_p_a_t_t_e_r_n]
               [--RR _s_e_c_t_i_o_n_p_a_t_t_e_r_n|----rreemmoovvee--sseeccttiioonn==_s_e_c_t_i_o_n_p_a_t_t_e_r_n]
               [----kkeeeepp--sseeccttiioonn==_s_e_c_t_i_o_n_p_a_t_t_e_r_n]
               [----rreemmoovvee--rreellooccaattiioonnss==_s_e_c_t_i_o_n_p_a_t_t_e_r_n]
               [--pp|----pprreesseerrvvee--ddaatteess]
               [--DD|----eennaabbllee--ddeetteerrmmiinniissttiicc--aarrcchhiivveess]
               [--UU|----ddiissaabbllee--ddeetteerrmmiinniissttiicc--aarrcchhiivveess]
               [----ddeebbuuggggiinngg]
               [----ggaapp--ffiillll==_v_a_l]
               [----ppaadd--ttoo==_a_d_d_r_e_s_s]
               [----sseett--ssttaarrtt==_v_a_l]
               [----aaddjjuusstt--ssttaarrtt==_i_n_c_r]
               [----cchhaannggee--aaddddrreesssseess==_i_n_c_r]
               [----cchhaannggee--sseeccttiioonn--aaddddrreessss _s_e_c_t_i_o_n_p_a_t_t_e_r_n{=,+,-}_v_a_l]
               [----cchhaannggee--sseeccttiioonn--llmmaa _s_e_c_t_i_o_n_p_a_t_t_e_r_n{=,+,-}_v_a_l]
               [----cchhaannggee--sseeccttiioonn--vvmmaa _s_e_c_t_i_o_n_p_a_t_t_e_r_n{=,+,-}_v_a_l]
               [----cchhaannggee--wwaarrnniinnggss] [----nnoo--cchhaannggee--wwaarrnniinnggss]
               [----sseett--sseeccttiioonn--ffllaaggss _s_e_c_t_i_o_n_p_a_t_t_e_r_n=_f_l_a_g_s]
               [----sseett--sseeccttiioonn--aalliiggnnmmeenntt _s_e_c_t_i_o_n_p_a_t_t_e_r_n=_a_l_i_g_n]
               [----aadddd--sseeccttiioonn _s_e_c_t_i_o_n_n_a_m_e=_f_i_l_e_n_a_m_e]
               [----dduummpp--sseeccttiioonn _s_e_c_t_i_o_n_n_a_m_e=_f_i_l_e_n_a_m_e]
               [----uuppddaattee--sseeccttiioonn _s_e_c_t_i_o_n_n_a_m_e=_f_i_l_e_n_a_m_e]
               [----rreennaammee--sseeccttiioonn _o_l_d_n_a_m_e=_n_e_w_n_a_m_e[,_f_l_a_g_s]]
               [----lloonngg--sseeccttiioonn--nnaammeess {enable,disable,keep}]
               [----cchhaannggee--lleeaaddiinngg--cchhaarr] [----rreemmoovvee--lleeaaddiinngg--cchhaarr]
               [----rreevveerrssee--bbyytteess==_n_u_m]
               [----ssrreecc--lleenn==_i_v_a_l] [----ssrreecc--ffoorrcceeSS33]
               [----rreeddeeffiinnee--ssyymm _o_l_d=_n_e_w]
               [----rreeddeeffiinnee--ssyymmss==_f_i_l_e_n_a_m_e]
               [----wweeaakkeenn]
               [----kkeeeepp--ssyymmbboollss==_f_i_l_e_n_a_m_e]
               [----ssttrriipp--ssyymmbboollss==_f_i_l_e_n_a_m_e]
               [----ssttrriipp--uunnnneeeeddeedd--ssyymmbboollss==_f_i_l_e_n_a_m_e]
               [----kkeeeepp--gglloobbaall--ssyymmbboollss==_f_i_l_e_n_a_m_e]
               [----llooccaalliizzee--ssyymmbboollss==_f_i_l_e_n_a_m_e]
               [----wweeaakkeenn--ssyymmbboollss==_f_i_l_e_n_a_m_e]
               [----aadddd--ssyymmbbooll _n_a_m_e=[_s_e_c_t_i_o_n:]_v_a_l_u_e[,_f_l_a_g_s]]
               [----aalltt--mmaacchhiinnee--ccooddee==_i_n_d_e_x]
               [----pprreeffiixx--ssyymmbboollss==_s_t_r_i_n_g]
               [----pprreeffiixx--sseeccttiioonnss==_s_t_r_i_n_g]
               [----pprreeffiixx--aalllloocc--sseeccttiioonnss==_s_t_r_i_n_g]
               [----aadddd--ggnnuu--ddeebbuugglliinnkk==_p_a_t_h_-_t_o_-_f_i_l_e]
               [----kkeeeepp--ffiillee--ssyymmbboollss]
               [----oonnllyy--kkeeeepp--ddeebbuugg]
               [----ssttrriipp--ddwwoo]
               [----eexxttrraacctt--ddwwoo]
               [----eexxttrraacctt--ssyymmbbooll]
               [----wwrriittaabbllee--tteexxtt]
               [----rreeaaddoonnllyy--tteexxtt]
               [----ppuurree]
               [----iimmppuurree]
               [----ffiillee--aalliiggnnmmeenntt==_n_u_m]
               [----hheeaapp==_s_i_z_e]
               [----iimmaaggee--bbaassee==_a_d_d_r_e_s_s]
               [----sseeccttiioonn--aalliiggnnmmeenntt==_n_u_m]
               [----ssttaacckk==_s_i_z_e]
               [----ssuubbssyysstteemm==_w_h_i_c_h:_m_a_j_o_r._m_i_n_o_r]
               [----ccoommpprreessss--ddeebbuugg--sseeccttiioonnss]
               [----ddeeccoommpprreessss--ddeebbuugg--sseeccttiioonnss]
               [----eellff--sstttt--ccoommmmoonn==_v_a_l]
               [----mmeerrggee--nnootteess]
               [----nnoo--mmeerrggee--nnootteess]
               [----vveerriilloogg--ddaattaa--wwiiddtthh==_v_a_l]
               [--vv|----vveerrbboossee]
               [--VV|----vveerrssiioonn]
               [----hheellpp] [----iinnffoo]
               _i_n_f_i_l_e [_o_u_t_f_i_l_e]

DDEESSCCRRIIPPTTIIOONN
       The GNU oobbjjccooppyy utility copies the contents of an object file to
       another.  oobbjjccooppyy uses the GNU BFD Library to read and write the object
       files.  It can write the destination object file in a format different
       from that of the source object file.  The exact behavior of oobbjjccooppyy is
       controlled by command-line options.  Note that oobbjjccooppyy should be able
       to copy a fully linked file between any two formats. However, copying a
       relocatable object file between any two formats may not work as
       expected.

       oobbjjccooppyy creates temporary files to do its translations and deletes them
       afterward.  oobbjjccooppyy uses BFD to do all its translation work; it has
       access to all the formats described in BFD and thus is able to
       recognize most formats without being told explicitly.

       oobbjjccooppyy can be used to generate S-records by using an output target of
       ssrreecc (e.g., use --OO ssrreecc).

       oobbjjccooppyy can be used to generate a raw binary file by using an output
       target of bbiinnaarryy (e.g., use --OO bbiinnaarryy).  When oobbjjccooppyy generates a raw
       binary file, it will essentially produce a memory dump of the contents
       of the input object file.  All symbols and relocation information will
       be discarded.  The memory dump will start at the load address of the
       lowest section copied into the output file.

       When generating an S-record or a raw binary file, it may be helpful to
       use --SS to remove sections containing debugging information.  In some
       cases --RR will be useful to remove sections which contain information
       that is not needed by the binary file.

       Note---oobbjjccooppyy is not able to change the endianness of its input files.
       If the input format has an endianness (some formats do not), oobbjjccooppyy
       can only copy the inputs into file formats that have the same
       endianness or which have no endianness (e.g., ssrreecc).  (However, see the
       ----rreevveerrssee--bbyytteess option.)

OOPPTTIIOONNSS
       _i_n_f_i_l_e
       _o_u_t_f_i_l_e
           The input and output files, respectively.  If you do not specify
           _o_u_t_f_i_l_e, oobbjjccooppyy creates a temporary file and destructively renames
           the result with the name of _i_n_f_i_l_e.

       --II _b_f_d_n_a_m_e
       ----iinnppuutt--ttaarrggeett==_b_f_d_n_a_m_e
           Consider the source file's object format to be _b_f_d_n_a_m_e, rather than
           attempting to deduce it.

       --OO _b_f_d_n_a_m_e
       ----oouuttppuutt--ttaarrggeett==_b_f_d_n_a_m_e
           Write the output file using the object format _b_f_d_n_a_m_e.

       --FF _b_f_d_n_a_m_e
       ----ttaarrggeett==_b_f_d_n_a_m_e
           Use _b_f_d_n_a_m_e as the object format for both the input and the output
           file; i.e., simply transfer data from source to destination with no
           translation.

       --BB _b_f_d_a_r_c_h
       ----bbiinnaarryy--aarrcchhiitteeccttuurree==_b_f_d_a_r_c_h
           Useful when transforming a architecture-less input file into an
           object file.  In this case the output architecture can be set to
           _b_f_d_a_r_c_h.  This option will be ignored if the input file has a known
           _b_f_d_a_r_c_h.  You can access this binary data inside a program by
           referencing the special symbols that are created by the conversion
           process.  These symbols are called _binary__o_b_j_f_i_l_e_start,
           _binary__o_b_j_f_i_l_e_end and _binary__o_b_j_f_i_l_e_size.  e.g. you can
           transform a picture file into an object file and then access it in
           your code using these symbols.

       --jj _s_e_c_t_i_o_n_p_a_t_t_e_r_n
       ----oonnllyy--sseeccttiioonn==_s_e_c_t_i_o_n_p_a_t_t_e_r_n
           Copy only the indicated sections from the input file to the output
           file.  This option may be given more than once.  Note that using
           this option inappropriately may make the output file unusable.
           Wildcard characters are accepted in _s_e_c_t_i_o_n_p_a_t_t_e_r_n.

           If the first character of _s_e_c_t_i_o_n_p_a_t_t_e_r_n is the exclamation point
           (!) then matching sections will not be copied, even if earlier use
           of ----oonnllyy--sseeccttiioonn on the same command line would otherwise copy it.
           For example:

                     --only-section=.text.* --only-section=!.text.foo

           will copy all sectinos maching '.text.*' but not the section
           '.text.foo'.

       --RR _s_e_c_t_i_o_n_p_a_t_t_e_r_n
       ----rreemmoovvee--sseeccttiioonn==_s_e_c_t_i_o_n_p_a_t_t_e_r_n
           Remove any section matching _s_e_c_t_i_o_n_p_a_t_t_e_r_n from the output file.
           This option may be given more than once.  Note that using this
           option inappropriately may make the output file unusable.  Wildcard
           characters are accepted in _s_e_c_t_i_o_n_p_a_t_t_e_r_n.  Using both the --jj and
           --RR options together results in undefined behaviour.

           If the first character of _s_e_c_t_i_o_n_p_a_t_t_e_r_n is the exclamation point
           (!) then matching sections will not be removed even if an earlier
           use of ----rreemmoovvee--sseeccttiioonn on the same command line would otherwise
           remove it.  For example:

                     --remove-section=.text.* --remove-section=!.text.foo

           will remove all sections matching the pattern '.text.*', but will
           not remove the section '.text.foo'.

       ----kkeeeepp--sseeccttiioonn==_s_e_c_t_i_o_n_p_a_t_t_e_r_n
           When removing sections from the output file, keep sections that
           match _s_e_c_t_i_o_n_p_a_t_t_e_r_n.

       ----rreemmoovvee--rreellooccaattiioonnss==_s_e_c_t_i_o_n_p_a_t_t_e_r_n
           Remove non-dynamic relocations from the output file for any section
           matching _s_e_c_t_i_o_n_p_a_t_t_e_r_n.  This option may be given more than once.
           Note that using this option inappropriately may make the output
           file unusable, and attempting to remove a dynamic relocation
           section such as ..rreellaa..pplltt from an executable or shared library with
           ----rreemmoovvee--rreellooccaattiioonnss==..pplltt will not work.  Wildcard characters are
           accepted in _s_e_c_t_i_o_n_p_a_t_t_e_r_n.  For example:

                     --remove-relocations=.text.*

           will remove the relocations for all sections matching the pattern
           '.text.*'.

           If the first character of _s_e_c_t_i_o_n_p_a_t_t_e_r_n is the exclamation point
           (!) then matching sections will not have their relocation removed
           even if an earlier use of ----rreemmoovvee--rreellooccaattiioonnss on the same command
           line would otherwise cause the relocations to be removed.  For
           example:

                     --remove-relocations=.text.* --remove-relocations=!.text.foo

           will remove all relocations for sections matching the pattern
           '.text.*', but will not remove relocations for the section
           '.text.foo'.

       --SS
       ----ssttrriipp--aallll
           Do not copy relocation and symbol information from the source file.

       --gg
       ----ssttrriipp--ddeebbuugg
           Do not copy debugging symbols or sections from the source file.

       ----ssttrriipp--uunnnneeeeddeedd
           Strip all symbols that are not needed for relocation processing.

       --KK _s_y_m_b_o_l_n_a_m_e
       ----kkeeeepp--ssyymmbbooll==_s_y_m_b_o_l_n_a_m_e
           When stripping symbols, keep symbol _s_y_m_b_o_l_n_a_m_e even if it would
           normally be stripped.  This option may be given more than once.

       --NN _s_y_m_b_o_l_n_a_m_e
       ----ssttrriipp--ssyymmbbooll==_s_y_m_b_o_l_n_a_m_e
           Do not copy symbol _s_y_m_b_o_l_n_a_m_e from the source file.  This option
           may be given more than once.

       ----ssttrriipp--uunnnneeeeddeedd--ssyymmbbooll==_s_y_m_b_o_l_n_a_m_e
           Do not copy symbol _s_y_m_b_o_l_n_a_m_e from the source file unless it is
           needed by a relocation.  This option may be given more than once.

       --GG _s_y_m_b_o_l_n_a_m_e
       ----kkeeeepp--gglloobbaall--ssyymmbbooll==_s_y_m_b_o_l_n_a_m_e
           Keep only symbol _s_y_m_b_o_l_n_a_m_e global.  Make all other symbols local
           to the file, so that they are not visible externally.  This option
           may be given more than once.  Note: this option cannot be used in
           conjunction with the ----gglloobbaalliizzee--ssyymmbbooll or ----gglloobbaalliizzee--ssyymmbboollss
           options.

       ----llooccaalliizzee--hhiiddddeenn
           In an ELF object, mark all symbols that have hidden or internal
           visibility as local.  This option applies on top of symbol-specific
           localization options such as --LL.

       --LL _s_y_m_b_o_l_n_a_m_e
       ----llooccaalliizzee--ssyymmbbooll==_s_y_m_b_o_l_n_a_m_e
           Convert a global or weak symbol called _s_y_m_b_o_l_n_a_m_e into a local
           symbol, so that it is not visible externally.  This option may be
           given more than once.  Note - unique symbols are not converted.

       --WW _s_y_m_b_o_l_n_a_m_e
       ----wweeaakkeenn--ssyymmbbooll==_s_y_m_b_o_l_n_a_m_e
           Make symbol _s_y_m_b_o_l_n_a_m_e weak. This option may be given more than
           once.

       ----gglloobbaalliizzee--ssyymmbbooll==_s_y_m_b_o_l_n_a_m_e
           Give symbol _s_y_m_b_o_l_n_a_m_e global scoping so that it is visible outside
           of the file in which it is defined.  This option may be given more
           than once.  Note: this option cannot be used in conjunction with
           the --GG or ----kkeeeepp--gglloobbaall--ssyymmbbooll options.

       --ww
       ----wwiillddccaarrdd
           Permit regular expressions in _s_y_m_b_o_l_n_a_m_es used in other command
           line options.  The question mark (?), asterisk (*), backslash (\)
           and square brackets ([]) operators can be used anywhere in the
           symbol name.  If the first character of the symbol name is the
           exclamation point (!) then the sense of the switch is reversed for
           that symbol.  For example:

                     -w -W !foo -W fo*

           would cause objcopy to weaken all symbols that start with "fo"
           except for the symbol "foo".

       --xx
       ----ddiissccaarrdd--aallll
           Do not copy non-global symbols from the source file.

       --XX
       ----ddiissccaarrdd--llooccaallss
           Do not copy compiler-generated local symbols.  (These usually start
           with LL or ...)

       --bb _b_y_t_e
       ----bbyyttee==_b_y_t_e
           If interleaving has been enabled via the ----iinntteerrlleeaavvee option then
           start the range of bytes to keep at the _b_y_t_eth byte.  _b_y_t_e can be
           in the range from 0 to _b_r_e_a_d_t_h-1, where _b_r_e_a_d_t_h is the value given
           by the ----iinntteerrlleeaavvee option.

       --ii [[_b_r_e_a_d_t_h]]
       ----iinntteerrlleeaavvee[[==_b_r_e_a_d_t_h]]
           Only copy a range out of every _b_r_e_a_d_t_h bytes.  (Header data is not
           affected).  Select which byte in the range begins the copy with the
           ----bbyyttee option.  Select the width of the range with the
           ----iinntteerrlleeaavvee--wwiiddtthh option.

           This option is useful for creating files to program ROM.  It is
           typically used with an "srec" output target.  Note that oobbjjccooppyy
           will complain if you do not specify the ----bbyyttee option as well.

           The default interleave breadth is 4, so with ----bbyyttee set to 0,
           oobbjjccooppyy would copy the first byte out of every four bytes from the
           input to the output.

       ----iinntteerrlleeaavvee--wwiiddtthh==_w_i_d_t_h
           When used with the ----iinntteerrlleeaavvee option, copy _w_i_d_t_h bytes at a time.
           The start of the range of bytes to be copied is set by the ----bbyyttee
           option, and the extent of the range is set with the ----iinntteerrlleeaavvee
           option.

           The default value for this option is 1.  The value of _w_i_d_t_h plus
           the _b_y_t_e value set by the ----bbyyttee option must not exceed the
           interleave breadth set by the ----iinntteerrlleeaavvee option.

           This option can be used to create images for two 16-bit flashes
           interleaved in a 32-bit bus by passing --bb 00 --ii 44
           ----iinntteerrlleeaavvee--wwiiddtthh==22 and --bb 22 --ii 44 ----iinntteerrlleeaavvee--wwiiddtthh==22 to two
           oobbjjccooppyy commands.  If the input was '12345678' then the outputs
           would be '1256' and '3478' respectively.

       --pp
       ----pprreesseerrvvee--ddaatteess
           Set the access and modification dates of the output file to be the
           same as those of the input file.

       --DD
       ----eennaabbllee--ddeetteerrmmiinniissttiicc--aarrcchhiivveess
           Operate in _d_e_t_e_r_m_i_n_i_s_t_i_c mode.  When copying archive members and
           writing the archive index, use zero for UIDs, GIDs, timestamps, and
           use consistent file modes for all files.

           If _b_i_n_u_t_i_l_s was configured with ----eennaabbllee--ddeetteerrmmiinniissttiicc--aarrcchhiivveess,
           then this mode is on by default.  It can be disabled with the --UU
           option, below.

       --UU
       ----ddiissaabbllee--ddeetteerrmmiinniissttiicc--aarrcchhiivveess
           Do _n_o_t operate in _d_e_t_e_r_m_i_n_i_s_t_i_c mode.  This is the inverse of the
           --DD option, above: when copying archive members and writing the
           archive index, use their actual UID, GID, timestamp, and file mode
           values.

           This is the default unless _b_i_n_u_t_i_l_s was configured with
           ----eennaabbllee--ddeetteerrmmiinniissttiicc--aarrcchhiivveess.

       ----ddeebbuuggggiinngg
           Convert debugging information, if possible.  This is not the
           default because only certain debugging formats are supported, and
           the conversion process can be time consuming.

       ----ggaapp--ffiillll _v_a_l
           Fill gaps between sections with _v_a_l.  This operation applies to the
           _l_o_a_d _a_d_d_r_e_s_s (LMA) of the sections.  It is done by increasing the
           size of the section with the lower address, and filling in the
           extra space created with _v_a_l.

       ----ppaadd--ttoo _a_d_d_r_e_s_s
           Pad the output file up to the load address _a_d_d_r_e_s_s.  This is done
           by increasing the size of the last section.  The extra space is
           filled in with the value specified by ----ggaapp--ffiillll (default zero).

       ----sseett--ssttaarrtt _v_a_l
           Set the start address (also known as the entry address) of the new
           file to _v_a_l.  Not all object file formats support setting the start
           address.

       ----cchhaannggee--ssttaarrtt _i_n_c_r
       ----aaddjjuusstt--ssttaarrtt _i_n_c_r
           Change the start address (also known as the entry address) by
           adding _i_n_c_r.  Not all object file formats support setting the start
           address.

       ----cchhaannggee--aaddddrreesssseess _i_n_c_r
       ----aaddjjuusstt--vvmmaa _i_n_c_r
           Change the VMA and LMA addresses of all sections, as well as the
           start address, by adding _i_n_c_r.  Some object file formats do not
           permit section addresses to be changed arbitrarily.  Note that this
           does not relocate the sections; if the program expects sections to
           be loaded at a certain address, and this option is used to change
           the sections such that they are loaded at a different address, the
           program may fail.

       ----cchhaannggee--sseeccttiioonn--aaddddrreessss _s_e_c_t_i_o_n_p_a_t_t_e_r_n{{==,,++,,--}}_v_a_l
       ----aaddjjuusstt--sseeccttiioonn--vvmmaa _s_e_c_t_i_o_n_p_a_t_t_e_r_n{{==,,++,,--}}_v_a_l
           Set or change both the VMA address and the LMA address of any
           section matching _s_e_c_t_i_o_n_p_a_t_t_e_r_n.  If == is used, the section address
           is set to _v_a_l.  Otherwise, _v_a_l is added to or subtracted from the
           section address.  See the comments under ----cchhaannggee--aaddddrreesssseess, above.
           If _s_e_c_t_i_o_n_p_a_t_t_e_r_n does not match any sections in the input file, a
           warning will be issued, unless ----nnoo--cchhaannggee--wwaarrnniinnggss is used.

       ----cchhaannggee--sseeccttiioonn--llmmaa _s_e_c_t_i_o_n_p_a_t_t_e_r_n{{==,,++,,--}}_v_a_l
           Set or change the LMA address of any sections matching
           _s_e_c_t_i_o_n_p_a_t_t_e_r_n.  The LMA address is the address where the section
           will be loaded into memory at program load time.  Normally this is
           the same as the VMA address, which is the address of the section at
           program run time, but on some systems, especially those where a
           program is held in ROM, the two can be different.  If == is used,
           the section address is set to _v_a_l.  Otherwise, _v_a_l is added to or
           subtracted from the section address.  See the comments under
           ----cchhaannggee--aaddddrreesssseess, above.  If _s_e_c_t_i_o_n_p_a_t_t_e_r_n does not match any
           sections in the input file, a warning will be issued, unless
           ----nnoo--cchhaannggee--wwaarrnniinnggss is used.

       ----cchhaannggee--sseeccttiioonn--vvmmaa _s_e_c_t_i_o_n_p_a_t_t_e_r_n{{==,,++,,--}}_v_a_l
           Set or change the VMA address of any section matching
           _s_e_c_t_i_o_n_p_a_t_t_e_r_n.  The VMA address is the address where the section
           will be located once the program has started executing.  Normally
           this is the same as the LMA address, which is the address where the
           section will be loaded into memory, but on some systems, especially
           those where a program is held in ROM, the two can be different.  If
           == is used, the section address is set to _v_a_l.  Otherwise, _v_a_l is
           added to or subtracted from the section address.  See the comments
           under ----cchhaannggee--aaddddrreesssseess, above.  If _s_e_c_t_i_o_n_p_a_t_t_e_r_n does not match
           any sections in the input file, a warning will be issued, unless
           ----nnoo--cchhaannggee--wwaarrnniinnggss is used.

       ----cchhaannggee--wwaarrnniinnggss
       ----aaddjjuusstt--wwaarrnniinnggss
           If ----cchhaannggee--sseeccttiioonn--aaddddrreessss or ----cchhaannggee--sseeccttiioonn--llmmaa or
           ----cchhaannggee--sseeccttiioonn--vvmmaa is used, and the section pattern does not
           match any sections, issue a warning.  This is the default.

       ----nnoo--cchhaannggee--wwaarrnniinnggss
       ----nnoo--aaddjjuusstt--wwaarrnniinnggss
           Do not issue a warning if ----cchhaannggee--sseeccttiioonn--aaddddrreessss or
           ----aaddjjuusstt--sseeccttiioonn--llmmaa or ----aaddjjuusstt--sseeccttiioonn--vvmmaa is used, even if the
           section pattern does not match any sections.

       ----sseett--sseeccttiioonn--ffllaaggss _s_e_c_t_i_o_n_p_a_t_t_e_r_n==_f_l_a_g_s
           Set the flags for any sections matching _s_e_c_t_i_o_n_p_a_t_t_e_r_n.  The _f_l_a_g_s
           argument is a comma separated string of flag names.  The recognized
           names are aalllloocc, ccoonntteennttss, llooaadd, nnoollooaadd, rreeaaddoonnllyy, ccooddee, ddaattaa, rroomm,
           eexxcclluuddee, sshhaarree, and ddeebbuugg.  You can set the ccoonntteennttss flag for a
           section which does not have contents, but it is not meaningful to
           clear the ccoonntteennttss flag of a section which does have contents--just
           remove the section instead.  Not all flags are meaningful for all
           object file formats.  In particular the sshhaarree flag is only
           meaningful for COFF format files and not for ELF format files.

       ----sseett--sseeccttiioonn--aalliiggnnmmeenntt _s_e_c_t_i_o_n_p_a_t_t_e_r_n==_a_l_i_g_n
           Set the alignment for any sections matching _s_e_c_t_i_o_n_p_a_t_t_e_r_n.  _a_l_i_g_n
           specifies the alignment in bytes and must be a power of two, i.e.
           1, 2, 4, 8....

       ----aadddd--sseeccttiioonn _s_e_c_t_i_o_n_n_a_m_e==_f_i_l_e_n_a_m_e
           Add a new section named _s_e_c_t_i_o_n_n_a_m_e while copying the file.  The
           contents of the new section are taken from the file _f_i_l_e_n_a_m_e.  The
           size of the section will be the size of the file.  This option only
           works on file formats which can support sections with arbitrary
           names.  Note - it may be necessary to use the ----sseett--sseeccttiioonn--ffllaaggss
           option to set the attributes of the newly created section.

       ----dduummpp--sseeccttiioonn _s_e_c_t_i_o_n_n_a_m_e==_f_i_l_e_n_a_m_e
           Place the contents of section named _s_e_c_t_i_o_n_n_a_m_e into the file
           _f_i_l_e_n_a_m_e, overwriting any contents that may have been there
           previously.  This option is the inverse of ----aadddd--sseeccttiioonn.  This
           option is similar to the ----oonnllyy--sseeccttiioonn option except that it does
           not create a formatted file, it just dumps the contents as raw
           binary data, without applying any relocations.  The option can be
           specified more than once.

       ----uuppddaattee--sseeccttiioonn _s_e_c_t_i_o_n_n_a_m_e==_f_i_l_e_n_a_m_e
           Replace the existing contents of a section named _s_e_c_t_i_o_n_n_a_m_e with
           the contents of file _f_i_l_e_n_a_m_e.  The size of the section will be
           adjusted to the size of the file.  The section flags for
           _s_e_c_t_i_o_n_n_a_m_e will be unchanged.  For ELF format files the section to
           segment mapping will also remain unchanged, something which is not
           possible using ----rreemmoovvee--sseeccttiioonn followed by ----aadddd--sseeccttiioonn.  The
           option can be specified more than once.

           Note - it is possible to use ----rreennaammee--sseeccttiioonn and ----uuppddaattee--sseeccttiioonn
           to both update and rename a section from one command line.  In this
           case, pass the original section name to ----uuppddaattee--sseeccttiioonn, and the
           original and new section names to ----rreennaammee--sseeccttiioonn.

       ----aadddd--ssyymmbbooll _n_a_m_e==[[_s_e_c_t_i_o_n::]]_v_a_l_u_e[[,,_f_l_a_g_s]]
           Add a new symbol named _n_a_m_e while copying the file.  This option
           may be specified multiple times.  If the _s_e_c_t_i_o_n is given, the
           symbol will be associated with and relative to that section,
           otherwise it will be an ABS symbol.  Specifying an undefined
           section will result in a fatal error.  There is no check for the
           value, it will be taken as specified.  Symbol flags can be
           specified and not all flags will be meaningful for all object file
           formats.  By default, the symbol will be global.  The special flag
           'before=_o_t_h_e_r_s_y_m' will insert the new symbol in front of the
           specified _o_t_h_e_r_s_y_m, otherwise the symbol(s) will be added at the
           end of the symbol table in the order they appear.

       ----rreennaammee--sseeccttiioonn _o_l_d_n_a_m_e==_n_e_w_n_a_m_e[[,,_f_l_a_g_s]]
           Rename a section from _o_l_d_n_a_m_e to _n_e_w_n_a_m_e, optionally changing the
           section's flags to _f_l_a_g_s in the process.  This has the advantage
           over using a linker script to perform the rename in that the output
           stays as an object file and does not become a linked executable.
           This option accepts the same set of flags as the
           ----sseecctt--sseeccttiioonn--ffllaaggss option.

           This option is particularly helpful when the input format is
           binary, since this will always create a section called .data.  If
           for example, you wanted instead to create a section called .rodata
           containing binary data you could use the following command line to
           achieve it:

                     objcopy -I binary -O <output_format> -B <architecture> \
                      --rename-section .data=.rodata,alloc,load,readonly,data,contents \
                      <input_binary_file> <output_object_file>

       ----lloonngg--sseeccttiioonn--nnaammeess {{eennaabbllee,,ddiissaabbllee,,kkeeeepp}}
           Controls the handling of long section names when processing "COFF"
           and "PE-COFF" object formats.  The default behaviour, kkeeeepp, is to
           preserve long section names if any are present in the input file.
           The eennaabbllee and ddiissaabbllee options forcibly enable or disable the use
           of long section names in the output object; when ddiissaabbllee is in
           effect, any long section names in the input object will be
           truncated.  The eennaabbllee option will only emit long section names if
           any are present in the inputs; this is mostly the same as kkeeeepp, but
           it is left undefined whether the eennaabbllee option might force the
           creation of an empty string table in the output file.

       ----cchhaannggee--lleeaaddiinngg--cchhaarr
           Some object file formats use special characters at the start of
           symbols.  The most common such character is underscore, which
           compilers often add before every symbol.  This option tells oobbjjccooppyy
           to change the leading character of every symbol when it converts
           between object file formats.  If the object file formats use the
           same leading character, this option has no effect.  Otherwise, it
           will add a character, or remove a character, or change a character,
           as appropriate.

       ----rreemmoovvee--lleeaaddiinngg--cchhaarr
           If the first character of a global symbol is a special symbol
           leading character used by the object file format, remove the
           character.  The most common symbol leading character is underscore.
           This option will remove a leading underscore from all global
           symbols.  This can be useful if you want to link together objects
           of different file formats with different conventions for symbol
           names.  This is different from ----cchhaannggee--lleeaaddiinngg--cchhaarr because it
           always changes the symbol name when appropriate, regardless of the
           object file format of the output file.

       ----rreevveerrssee--bbyytteess==_n_u_m
           Reverse the bytes in a section with output contents.  A section
           length must be evenly divisible by the value given in order for the
           swap to be able to take place. Reversing takes place before the
           interleaving is performed.

           This option is used typically in generating ROM images for
           problematic target systems.  For example, on some target boards,
           the 32-bit words fetched from 8-bit ROMs are re-assembled in
           little-endian byte order regardless of the CPU byte order.
           Depending on the programming model, the endianness of the ROM may
           need to be modified.

           Consider a simple file with a section containing the following
           eight bytes:  12345678.

           Using ----rreevveerrssee--bbyytteess==22 for the above example, the bytes in the
           output file would be ordered 21436587.

           Using ----rreevveerrssee--bbyytteess==44 for the above example, the bytes in the
           output file would be ordered 43218765.

           By using ----rreevveerrssee--bbyytteess==22 for the above example, followed by
           ----rreevveerrssee--bbyytteess==44 on the output file, the bytes in the second
           output file would be ordered 34127856.

       ----ssrreecc--lleenn==_i_v_a_l
           Meaningful only for srec output.  Set the maximum length of the
           Srecords being produced to _i_v_a_l.  This length covers both address,
           data and crc fields.

       ----ssrreecc--ffoorrcceeSS33
           Meaningful only for srec output.  Avoid generation of S1/S2
           records, creating S3-only record format.

       ----rreeddeeffiinnee--ssyymm _o_l_d==_n_e_w
           Change the name of a symbol _o_l_d, to _n_e_w.  This can be useful when
           one is trying link two things together for which you have no
           source, and there are name collisions.

       ----rreeddeeffiinnee--ssyymmss==_f_i_l_e_n_a_m_e
           Apply ----rreeddeeffiinnee--ssyymm to each symbol pair "_o_l_d _n_e_w" listed in the
           file _f_i_l_e_n_a_m_e.  _f_i_l_e_n_a_m_e is simply a flat file, with one symbol
           pair per line.  Line comments may be introduced by the hash
           character.  This option may be given more than once.

       ----wweeaakkeenn
           Change all global symbols in the file to be weak.  This can be
           useful when building an object which will be linked against other
           objects using the --RR option to the linker.  This option is only
           effective when using an object file format which supports weak
           symbols.

       ----kkeeeepp--ssyymmbboollss==_f_i_l_e_n_a_m_e
           Apply ----kkeeeepp--ssyymmbbooll option to each symbol listed in the file
           _f_i_l_e_n_a_m_e.  _f_i_l_e_n_a_m_e is simply a flat file, with one symbol name per
           line.  Line comments may be introduced by the hash character.  This
           option may be given more than once.

       ----ssttrriipp--ssyymmbboollss==_f_i_l_e_n_a_m_e
           Apply ----ssttrriipp--ssyymmbbooll option to each symbol listed in the file
           _f_i_l_e_n_a_m_e.  _f_i_l_e_n_a_m_e is simply a flat file, with one symbol name per
           line.  Line comments may be introduced by the hash character.  This
           option may be given more than once.

       ----ssttrriipp--uunnnneeeeddeedd--ssyymmbboollss==_f_i_l_e_n_a_m_e
           Apply ----ssttrriipp--uunnnneeeeddeedd--ssyymmbbooll option to each symbol listed in the
           file _f_i_l_e_n_a_m_e.  _f_i_l_e_n_a_m_e is simply a flat file, with one symbol
           name per line.  Line comments may be introduced by the hash
           character.  This option may be given more than once.

       ----kkeeeepp--gglloobbaall--ssyymmbboollss==_f_i_l_e_n_a_m_e
           Apply ----kkeeeepp--gglloobbaall--ssyymmbbooll option to each symbol listed in the file
           _f_i_l_e_n_a_m_e.  _f_i_l_e_n_a_m_e is simply a flat file, with one symbol name per
           line.  Line comments may be introduced by the hash character.  This
           option may be given more than once.

       ----llooccaalliizzee--ssyymmbboollss==_f_i_l_e_n_a_m_e
           Apply ----llooccaalliizzee--ssyymmbbooll option to each symbol listed in the file
           _f_i_l_e_n_a_m_e.  _f_i_l_e_n_a_m_e is simply a flat file, with one symbol name per
           line.  Line comments may be introduced by the hash character.  This
           option may be given more than once.

       ----gglloobbaalliizzee--ssyymmbboollss==_f_i_l_e_n_a_m_e
           Apply ----gglloobbaalliizzee--ssyymmbbooll option to each symbol listed in the file
           _f_i_l_e_n_a_m_e.  _f_i_l_e_n_a_m_e is simply a flat file, with one symbol name per
           line.  Line comments may be introduced by the hash character.  This
           option may be given more than once.  Note: this option cannot be
           used in conjunction with the --GG or ----kkeeeepp--gglloobbaall--ssyymmbbooll options.

       ----wweeaakkeenn--ssyymmbboollss==_f_i_l_e_n_a_m_e
           Apply ----wweeaakkeenn--ssyymmbbooll option to each symbol listed in the file
           _f_i_l_e_n_a_m_e.  _f_i_l_e_n_a_m_e is simply a flat file, with one symbol name per
           line.  Line comments may be introduced by the hash character.  This
           option may be given more than once.

       ----aalltt--mmaacchhiinnee--ccooddee==_i_n_d_e_x
           If the output architecture has alternate machine codes, use the
           _i_n_d_e_xth code instead of the default one.  This is useful in case a
           machine is assigned an official code and the tool-chain adopts the
           new code, but other applications still depend on the original code
           being used.  For ELF based architectures if the _i_n_d_e_x alternative
           does not exist then the value is treated as an absolute number to
           be stored in the e_machine field of the ELF header.

       ----wwrriittaabbllee--tteexxtt
           Mark the output text as writable.  This option isn't meaningful for
           all object file formats.

       ----rreeaaddoonnllyy--tteexxtt
           Make the output text write protected.  This option isn't meaningful
           for all object file formats.

       ----ppuurree
           Mark the output file as demand paged.  This option isn't meaningful
           for all object file formats.

       ----iimmppuurree
           Mark the output file as impure.  This option isn't meaningful for
           all object file formats.

       ----pprreeffiixx--ssyymmbboollss==_s_t_r_i_n_g
           Prefix all symbols in the output file with _s_t_r_i_n_g.

       ----pprreeffiixx--sseeccttiioonnss==_s_t_r_i_n_g
           Prefix all section names in the output file with _s_t_r_i_n_g.

       ----pprreeffiixx--aalllloocc--sseeccttiioonnss==_s_t_r_i_n_g
           Prefix all the names of all allocated sections in the output file
           with _s_t_r_i_n_g.

       ----aadddd--ggnnuu--ddeebbuugglliinnkk==_p_a_t_h_-_t_o_-_f_i_l_e
           Creates a .gnu_debuglink section which contains a reference to
           _p_a_t_h_-_t_o_-_f_i_l_e and adds it to the output file.  Note: the file at
           _p_a_t_h_-_t_o_-_f_i_l_e must exist.  Part of the process of adding the
           .gnu_debuglink section involves embedding a checksum of the
           contents of the debug info file into the section.

           If the debug info file is built in one location but it is going to
           be installed at a later time into a different location then do not
           use the path to the installed location.  The ----aadddd--ggnnuu--ddeebbuugglliinnkk
           option will fail because the installed file does not exist yet.
           Instead put the debug info file in the current directory and use
           the ----aadddd--ggnnuu--ddeebbuugglliinnkk option without any directory components,
           like this:

                    objcopy --add-gnu-debuglink=foo.debug

           At debug time the debugger will attempt to look for the separate
           debug info file in a set of known locations.  The exact set of
           these locations varies depending upon the distribution being used,
           but it typically includes:

           "* The same directory as the executable."
           "* A sub-directory of the directory containing the executable"
               called .debug

           "* A global debug directory such as /usr/lib/debug."

           As long as the debug info file has been installed into one of these
           locations before the debugger is run everything should work
           correctly.

       ----kkeeeepp--ffiillee--ssyymmbboollss
           When stripping a file, perhaps with ----ssttrriipp--ddeebbuugg or
           ----ssttrriipp--uunnnneeeeddeedd, retain any symbols specifying source file names,
           which would otherwise get stripped.

       ----oonnllyy--kkeeeepp--ddeebbuugg
           Strip a file, removing contents of any sections that would not be
           stripped by ----ssttrriipp--ddeebbuugg and leaving the debugging sections
           intact.  In ELF files, this preserves all note sections in the
           output.

           Note - the section headers of the stripped sections are preserved,
           including their sizes, but the contents of the section are
           discarded.  The section headers are preserved so that other tools
           can match up the debuginfo file with the real executable, even if
           that executable has been relocated to a different address space.

           The intention is that this option will be used in conjunction with
           ----aadddd--ggnnuu--ddeebbuugglliinnkk to create a two part executable.  One a
           stripped binary which will occupy less space in RAM and in a
           distribution and the second a debugging information file which is
           only needed if debugging abilities are required.  The suggested
           procedure to create these files is as follows:

           1.<Link the executable as normal.  Assuming that it is called>
               "foo" then...

           1.<Run "objcopy --only-keep-debug foo foo.dbg" to>
               create a file containing the debugging info.

           1.<Run "objcopy --strip-debug foo" to create a>
               stripped executable.

           1.<Run "objcopy --add-gnu-debuglink=foo.dbg foo">
               to add a link to the debugging info into the stripped
               executable.

           Note---the choice of ".dbg" as an extension for the debug info file
           is arbitrary.  Also the "--only-keep-debug" step is optional.  You
           could instead do this:

           1.<Link the executable as normal.>
           1.<Copy "foo" to  "foo.full">
           1.<Run "objcopy --strip-debug foo">
           1.<Run "objcopy --add-gnu-debuglink=foo.full foo">

           i.e., the file pointed to by the ----aadddd--ggnnuu--ddeebbuugglliinnkk can be the
           full executable.  It does not have to be a file created by the
           ----oonnllyy--kkeeeepp--ddeebbuugg switch.

           Note---this switch is only intended for use on fully linked files.
           It does not make sense to use it on object files where the
           debugging information may be incomplete.  Besides the gnu_debuglink
           feature currently only supports the presence of one filename
           containing debugging information, not multiple filenames on a one-
           per-object-file basis.

       ----ssttrriipp--ddwwoo
           Remove the contents of all DWARF .dwo sections, leaving the
           remaining debugging sections and all symbols intact.  This option
           is intended for use by the compiler as part of the --ggsspplliitt--ddwwaarrff
           option, which splits debug information between the .o file and a
           separate .dwo file.  The compiler generates all debug information
           in the same file, then uses the ----eexxttrraacctt--ddwwoo option to copy the
           .dwo sections to the .dwo file, then the ----ssttrriipp--ddwwoo option to
           remove those sections from the original .o file.

       ----eexxttrraacctt--ddwwoo
           Extract the contents of all DWARF .dwo sections.  See the
           ----ssttrriipp--ddwwoo option for more information.

       ----ffiillee--aalliiggnnmmeenntt _n_u_m
           Specify the file alignment.  Sections in the file will always begin
           at file offsets which are multiples of this number.  This defaults
           to 512.  [This option is specific to PE targets.]

       ----hheeaapp _r_e_s_e_r_v_e
       ----hheeaapp _r_e_s_e_r_v_e,,_c_o_m_m_i_t
           Specify the number of bytes of memory to reserve (and optionally
           commit) to be used as heap for this program.  [This option is
           specific to PE targets.]

       ----iimmaaggee--bbaassee _v_a_l_u_e
           Use _v_a_l_u_e as the base address of your program or dll.  This is the
           lowest memory location that will be used when your program or dll
           is loaded.  To reduce the need to relocate and improve performance
           of your dlls, each should have a unique base address and not
           overlap any other dlls.  The default is 0x400000 for executables,
           and 0x10000000 for dlls.  [This option is specific to PE targets.]

       ----sseeccttiioonn--aalliiggnnmmeenntt _n_u_m
           Sets the section alignment field in the PE header.  Sections in
           memory will always begin at addresses which are a multiple of this
           number.  Defaults to 0x1000.  [This option is specific to PE
           targets.]

       ----ssttaacckk _r_e_s_e_r_v_e
       ----ssttaacckk _r_e_s_e_r_v_e,,_c_o_m_m_i_t
           Specify the number of bytes of memory to reserve (and optionally
           commit) to be used as stack for this program.  [This option is
           specific to PE targets.]

       ----ssuubbssyysstteemm _w_h_i_c_h
       ----ssuubbssyysstteemm _w_h_i_c_h::_m_a_j_o_r
       ----ssuubbssyysstteemm _w_h_i_c_h::_m_a_j_o_r.._m_i_n_o_r
           Specifies the subsystem under which your program will execute.  The
           legal values for _w_h_i_c_h are "native", "windows", "console", "posix",
           "efi-app", "efi-bsd", "efi-rtd", "sal-rtd", and "xbox".  You may
           optionally set the subsystem version also.  Numeric values are also
           accepted for _w_h_i_c_h.  [This option is specific to PE targets.]

       ----eexxttrraacctt--ssyymmbbooll
           Keep the file's section flags and symbols but remove all section
           data.  Specifically, the option:

           *<removes the contents of all sections;>
           *<sets the size of every section to zero; and>
           *<sets the file's start address to zero.>

           This option is used to build a _._s_y_m file for a VxWorks kernel.  It
           can also be a useful way of reducing the size of a ----jjuusstt--ssyymmbboollss
           linker input file.

       ----ccoommpprreessss--ddeebbuugg--sseeccttiioonnss
           Compress DWARF debug sections using zlib with SHF_COMPRESSED from
           the ELF ABI.  Note - if compression would actually make a section
           _l_a_r_g_e_r, then it is not compressed.

       ----ccoommpprreessss--ddeebbuugg--sseeccttiioonnss==nnoonnee
       ----ccoommpprreessss--ddeebbuugg--sseeccttiioonnss==zzlliibb
       ----ccoommpprreessss--ddeebbuugg--sseeccttiioonnss==zzlliibb--ggnnuu
       ----ccoommpprreessss--ddeebbuugg--sseeccttiioonnss==zzlliibb--ggaabbii
           For ELF files, these options control how DWARF debug sections are
           compressed.  ----ccoommpprreessss--ddeebbuugg--sseeccttiioonnss==nnoonnee is equivalent to
           ----ddeeccoommpprreessss--ddeebbuugg--sseeccttiioonnss.  ----ccoommpprreessss--ddeebbuugg--sseeccttiioonnss==zzlliibb and
           ----ccoommpprreessss--ddeebbuugg--sseeccttiioonnss==zzlliibb--ggaabbii are equivalent to
           ----ccoommpprreessss--ddeebbuugg--sseeccttiioonnss.  ----ccoommpprreessss--ddeebbuugg--sseeccttiioonnss==zzlliibb--ggnnuu
           compresses DWARF debug sections using zlib.  The debug sections are
           renamed to begin with ..zzddeebbuugg instead of ..ddeebbuugg.  Note - if
           compression would actually make a section _l_a_r_g_e_r, then it is not
           compressed nor renamed.

       ----ddeeccoommpprreessss--ddeebbuugg--sseeccttiioonnss
           Decompress DWARF debug sections using zlib.  The original section
           names of the compressed sections are restored.

       ----eellff--sstttt--ccoommmmoonn==yyeess
       ----eellff--sstttt--ccoommmmoonn==nnoo
           For ELF files, these options control whether common symbols should
           be converted to the "STT_COMMON" or "STT_OBJECT" type.
           ----eellff--sstttt--ccoommmmoonn==yyeess converts common symbol type to "STT_COMMON".
           ----eellff--sstttt--ccoommmmoonn==nnoo converts common symbol type to "STT_OBJECT".

       ----mmeerrggee--nnootteess
       ----nnoo--mmeerrggee--nnootteess
           For ELF files, attempt (or do not attempt) to reduce the size of
           any SHT_NOTE type sections by removing duplicate notes.

       --VV
       ----vveerrssiioonn
           Show the version number of oobbjjccooppyy.

       ----vveerriilloogg--ddaattaa--wwiiddtthh==_b_y_t_e_s
           For Verilog output, this options controls the number of bytes
           converted for each output data element.  The input target controls
           the endianness of the conversion.

       --vv
       ----vveerrbboossee
           Verbose output: list all object files modified.  In the case of
           archives, oobbjjccooppyy --VV lists all members of the archive.

       ----hheellpp
           Show a summary of the options to oobbjjccooppyy.

       ----iinnffoo
           Display a list showing all architectures and object formats
           available.

       @@_f_i_l_e
           Read command-line options from _f_i_l_e.  The options read are inserted
           in place of the original @_f_i_l_e option.  If _f_i_l_e does not exist, or
           cannot be read, then the option will be treated literally, and not
           removed.

           Options in _f_i_l_e are separated by whitespace.  A whitespace
           character may be included in an option by surrounding the entire
           option in either single or double quotes.  Any character (including
           a backslash) may be included by prefixing the character to be
           included with a backslash.  The _f_i_l_e may itself contain additional
           @_f_i_l_e options; any such options will be processed recursively.

SSEEEE AALLSSOO
       lldd(1), oobbjjdduummpp(1), and the Info entries for _b_i_n_u_t_i_l_s.

CCOOPPYYRRIIGGHHTT
       Copyright (c) 1991-2020 Free Software Foundation, Inc.

       Permission is granted to copy, distribute and/or modify this document
       under the terms of the GNU Free Documentation License, Version 1.3 or
       any later version published by the Free Software Foundation; with no
       Invariant Sections, with no Front-Cover Texts, and with no Back-Cover
       Texts.  A copy of the license is included in the section entitled "GNU
       Free Documentation License".



binutils-2.35.1                   2020-09-19                        OBJCOPY(1)
